gaussian tests:


clear m
clear image0
clear image1
image0 = zeros(19,29,51);
sigmax = 5;
sigmay = 4;
x0 = 29/3;
y0 = 19/3;
for y= 1:19
    for x= 1:29
        image0(y,x,:)=exp(-((x-x0)^2/(2*sigmax^2)+(y-y0)^2/(2*sigmay^2)));
    end
end
size(image0)
truem:
m =

  Columns 1 through 7 

    1.1000         0         0         0    1.0000         0    1.0000

  Column 8 

         0

image1=myNewaffine(image0,m)

lmnogradient(image0,image1,[1 0 0 0 1 0 1 0 ]')
--------------------

type==2 allowskew==0
-----------------------

errr =

  1.7320e-006


ans =

  1.0e-005 *

    0.1732    0.1732


landa =

  1.0000e+006


ans =

landa increased


iteration =

    30


m =

    1.1017
   -0.0000
   -0.0122
    0.0000
    0.9977
    0.0160
    1.0000
         0


ans =

    1.1017
   -0.0000
   -0.0122
    0.0000
    0.9977
    0.0160
    1.0000
         0

>> 
type==2 allowskew==1
-------------------------
errr =

  1.7363e-006


ans =

  1.0e-005 *

    0.1736    0.1736


landa =

    1.0000


ans =

landa increased


iteration =

    30


m =

    1.1017
    0.0010
   -0.0180
   -0.0006
    0.9977
    0.0221
    1.0000
         0


ans =

    1.1017
    0.0010
   -0.0180
   -0.0006
    0.9977
    0.0221
    1.0000
         0

>> 


type==1  allowskew==0
----------------------
errr =

  1.7328e-006


ans =

  1.0e-005 *

    0.1733    0.1733


landa =

  1.0000e+004


ans =

landa increased


iteration =

    30


m =

    1.1016
    0.0001
   -0.0124
   -0.0001
    0.9978
    0.0170
    1.0000
         0


ans =

    1.1016
    0.0001
   -0.0124
   -0.0001
    0.9978
    0.0170
    1.0000
         0

>> 
type==1 allowskew==1

errr =

  1.0629e-005


ans =

  1.0e-004 *

    0.1063    0.0800


landa =

    1.0000


ans =

landa increased


iteration =

    30


m =

    1.0833
   -0.2187
    1.5562
    0.1268
    0.9859
   -1.1310
    1.0000
         0


ans =

    1.0833
   -0.2187
    1.5562
    0.1268
    0.9859
   -1.1310
    1.0000
         0

>> 