%computing initial transform'n coefficients


subj2mea(find(abs(subj2mea)<.00001))=NaN;
subj1mea(find(abs(subj1mea)<.00001))=NaN;
[m errr landa]=lmnogradient(subj2mea,subj1mea,[1 0 0 0 1 0 1 0 ]')

m =

    0.8034
    0.0707
    1.5857
   -0.0624
    0.7094
    4.2191
    1.1163
   -2.1315

   m =

    1.0198
   -0.0231
    0.2789
    0.0224
    0.9899
    0.4964
    0.9827
   -0.0244
mtrue=m'
   mtrueinv=inv([mtrue(1:2) 0 mtrue(3);mtrue(4:5) 0 mtrue(6);0 0 mtrue(7:8); 0 0 0 1])

minv=[mtrueinv(1,1:2) mtrueinv(1,4) mtrueinv(2,1:2) mtrueinv(2,4) mtrueinv(3,3:4)]
   
   
   
lmnogradient(image0,image1,[1 0 0 0 1 0 1 0 ]')
type==2 gaussian:

pnts =

       16422


errr =

  2.1770e-005


ans =

  1.0e-004 *

    0.2177    0.2177


landa =

  1.0000e+008

ans =

    1.0930
    0.0009
    2.1529
   -0.0007
    0.9086
   -2.6951
    1.0000
         0
         
m =

  Columns 1 through 7 

    1.1000         0    2.0900         0    0.9000   -2.6100    1.0000

  Column 8 

         0
         
         

clear m
theta=0
[xsize ysize zsize]=size(image0)
%x0 = xsize/10
x0 = 0
%y0 = -ysize/10
y0 = 0
z0 = 0
%Sx = 1.05
Sx = 1.1
Sy = 1
Sz = 1         
    
clear m
theta=0
[xsize ysize zsize]=size(image0)
x0 = xsize/10
%x0 = 5
y0 = -ysize/10
%y0 = 0
z0 = 0
%Sx = 1.05
Sx = 1.1
Sy = .9
Sz = 1

m(:, 1)=cos(theta*pi./180).*Sx;
m(:, 2)=-sin(theta*pi./180).*Sx;
m(:, 3)=1/2*Sx.*(xsize-(xsize-2*x0).*cos(theta*pi./180)+(ysize-2*y0).*sin(theta*pi./180));
m(:, 4)=sin(theta*pi./180).*Sy;
m(:, 5) = cos(theta*pi/180).*Sy;
m(:, 6)=-1/2*Sy.*(-ysize+(ysize-2*y0).*cos(theta*pi./180)+(xsize-2*x0).*sin(theta*pi./180));
m(:, 7) = Sz;
m(:, 8) = Sz.*z0;
%creates m as a row of coefficents


[image1 image0]=myNewaffine(image0,m)

m(:,1)=1;
m(:,2)=   0;
m(:,3)=    0;
m(:,4)=    0;
m(:,5)=    1;
m(:,6)=    0;
m(:,7)=    1;
m(:,8)=    0;
%

mtrue=[0.996195 -0.0871557 -2.19258 0.0871557 0.996195 -.49288 1 0]
mtrueinv=inv([mtrue(1:2) 0 mtrue(3);mtrue(4:5) 0 mtrue(6);0 0 mtrue(7:8); 0 0 0 1])

minv=[mtrueinv(1,1:2) mtrueinv(1,4) mtrueinv(2,1:2) mtrueinv(2,4) mtrueinv(3,3:4)]

m(:,1)=mtrue(1);
m(:,2)=   mtrue(2);
m(:,3)=    mtrue(3);
m(:,4)=    mtrue(4);
m(:,5)=    mtrue(5);
m(:,6)=    mtrue(6);
m(:,7)=    mtrue(7);
m(:,8)=    mtrue(8);
%

m(:,1)=1.0514;
m(:,2)=   -0.3972;
m(:,3)=    2.9922;
m(:,4)=    0.2314;
m(:,5)=    0.9561;
m(:,6)=   -1.9540;
m(:,7)=    1.0000;
m(:,8)=         0;
%
figure; imagesc(image0(:,:,1)); title('0');
figure; imagesc(image1(:,:,1)); title('1');

dampnewtonAff(image0,image1,[1 0 0 0 1 0 1 0 ]')
lmvectorisedjon(image0,image1,[1 0 0 0 1 0 1 0 ]')
lmnogradient(image0,image1,[1 0 0 0 1 0 1 0 ]')

lmvectorisedjon(I0t,subj1mea,[1 0 0 0 1 0 1 0 ]')

lmnogradient(I0t,subj1mea,[1 0 0 0 1 0 1 0 ]')
minv =

  Columns 1 through 7 

    0.9962    0.0872    2.2272   -0.0872    0.9962    0.2999    1.0000

  Column 8 

         0

type==1
ans =

    0.9977
    0.0868
    2.2082
   -0.0868
    0.9972
    0.2838
    1.0007
   -0.0256
mtrue=[0.996195 -0.0871557 -2.19258 0.0871557 0.996195 -.49288 1 0]

lmvectorisedjon(I0t,subj1mea,[0.9962 .0872 2.2272 -.0872 .9962 .2999 1 0]')

------------
 mtrue=[1.1 -0.0871557 -4 0.0871557 0.996195 3 1 0]
 image1=myNewaffine(I0t,mtrue)
 lmnogradient(I0t,image1,[1 0 0 0 1 0 1 0 ]')
 mtrue
 -------------

clear m
clear image0
clear image1
image0 = zeros(19,29,51);
sigmax = 5;
sigmay = 4;
x0 = 29/3;
y0 = 19/3;
for y= 1:19
    for x= 1:29
        image0(y,x,:)=exp(-((x-x0)^2/(2*sigmax^2)+(y-y0)^2/(2*sigmay^2)));
    end
end
size(image0)

figure; imagesc(image0(:,:,1))
image1=myNewaffine(image0,m)





clear m
clear image0
clear image1
image0 = zeros(19,29,51);
sigmax = 5;
sigmay = 4;
x0 = 29/3;
y0 = 19/3;
for y= 1:19
    for x= 1:29
        image0(y,x,:)=exp(-((x-x0)^2/(2*sigmax^2)+(y-y0)^2/(2*sigmay^2)));
    end
end
size(image0)

figure; imagesc(image0(:,:,1))







clear m
clear image0
clear image1
image0 = zeros(19,29,51);
sigmax = 5;
sigmay = 4;
x0 = 29/3;
y0 = 19/3;
for y= 1:19
    for x= 1:29
        image0(y,x,:)=7*x;
    end
end
size(image0)

figure; imagesc(image0(:,:,1))